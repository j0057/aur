#!/bin/bash -e

. /etc/build-aur.conf

message() { echo -e "\e[1;32m==>\e[1;33m $1\e[0;0m" ; }

ARCH=$(uname -m)
NAME=$(basename $REPO)

BUILD_USER=jjm

mkdir -pv "${REPO}"

message "nobody: give sudoers permission for pacman"
cat >/etc/sudoers.d/nobody-pacman-$$ <<EOF
nobody ALL=(ALL) NOPASSWD: /usr/bin/pacman
EOF
trap "rm -v /etc/sudoers.d/nobody-pacman-$$" EXIT

if [ ! -f "${REPO}/${NAME}.db.tar.gz" ]; then
    message "${REPO}: initializing"
    tar cvfT "${REPO}/${NAME}.db.tar.gz" /dev/null
    ln -s "${NAME}.db.tar.gz" "${REPO}/${NAME}.db"
    pacman --sync --refresh
    pacman --sync --clean --noconfirm
fi

cd ${BUILD}
for (( i=0 ; i < ${#PKGS[*]} ; i++ )); do
    name="${PKGS[i]}"
    [ "${name}" = "python2-pysqlite" ] \
        && url="https://aur.archlinux.org/python-pysqlite.git" \
        || url="https://aur.archlinux.org/${name}.git"

    if [ ! -d "${name}" ]; then
        message "${name}: cloning ${url}"
        sudo -u ${BUILD_USER} git clone --origin aur ${url} ${name}
    fi
    cd "${name}"

    message "${name}: pulling from ${url}"
    sudo -u ${BUILD_USER} git pull --rebase --verbose

    pkgver=$(sed -n '/^pkgver=/ s/pkgver=// p' "PKGBUILD")
    pkgrel=$(sed -n '/^pkgrel=/ s/pkgrel=// p' "PKGBUILD")

    [ -n "${pkgver}" ]
    [ -n "${pkgrel}" ]

    if [ -f ${REPO}/${name}-${pkgver}-${pkgrel}-*.pkg.tar.xz ]; then
        message "${name}-${pkgver}-${pkgrel}: skipping"
    else
        message "${name}-${pkgver}-${pkgrel}: building"
        sudo -u ${BUILD_USER} makepkg --force --syncdeps --rmdeps --noconfirm --ignorearch
        mv ${name}-${pkgver}-${pkgrel}*.pkg.tar.xz "${REPO}"
        repo-add --new "${REPO}/${NAME}.db.tar.gz" ${REPO}/${name}-${pkgver}-${pkgrel}-*.pkg.tar.xz
        pacman --sync --refresh
    fi

    sudo -u ${BUILD_USER} git clean -dxf
    cd ..
done

pacman --sync --list ${NAME}
