#!/bin/bash

set -e

message() { echo -e "\e[1;32m==>\e[1;33m $1\e[0;0m" ; }
:() { sudo -u ${BUILD_USER} $* ; }

. ${BUILD_AUR_CONF:-/etc/build-aur.conf}

BUILD_USER=${BUILD_USER:-aur}

ARCH=$(uname -m)
NAME=$(basename $REPO)

message "${BUILD_USER}: give sudoers permission for pacman"
cat >/etc/sudoers.d/build-aur-$$ <<EOF
${BUILD_USER} ALL=(ALL) NOPASSWD: /usr/bin/pacman
EOF
trap "rm -v /etc/sudoers.d/build-aur-$$" EXIT

if [ ! -d "${BUILD}" ]; then
    message "${BUILD}: creating"
    mkdir -pv "${BUILD}"
    chown "${BUILD_USER}" "${BUILD}"
    chmod 755 "${BUILD}"
fi

if [ ! -d "${REPO}" ]; then
    message "${REPO}: creating"
    mkdir -pv "${REPO}"
    chown "${BUILD_USER}" "${REPO}"
    chmod 755 "${REPO}"
fi

if [ ! -f "${REPO}/${NAME}.db.tar.gz" ]; then
    message "${REPO}: initializing"
    : tar cvfT "${REPO}/${NAME}.db.tar.gz" /dev/null
    : ln -s "${NAME}.db.tar.gz" "${REPO}/${NAME}.db"
    pacman --sync --refresh
    pacman --sync --clean --noconfirm
fi

cd ${BUILD}
for (( i=0 ; i < ${#PKGS[*]} ; i++ )); do
    name="${PKGS[i]}"
    [ "${name}" = "python2-pysqlite" ] \
        && url="https://aur.archlinux.org/python-pysqlite.git" \
        || url="https://aur.archlinux.org/${name}.git"
    # XXX: wtf is this shit?!

    if [ ! -d "${name}" ]; then
        message "${name}: cloning ${url}"
        : git clone --origin aur ${url} ${name}
    fi
    cd "${name}"

    message "${name}: pulling from ${url}"
    : git pull --rebase --verbose

    pkgver=$(sed -n '/^pkgver=/ s/pkgver=// p' "PKGBUILD")
    pkgrel=$(sed -n '/^pkgrel=/ s/pkgrel=// p' "PKGBUILD")

    [ -n "${pkgver}" ]
    [ -n "${pkgrel}" ]

    if [ -f ${REPO}/${name}-${pkgver}-${pkgrel}-*.pkg.tar.xz ]; then
        message "${name}-${pkgver}-${pkgrel}: skipping"
    else
        message "${name}-${pkgver}-${pkgrel}: building"
        : makepkg --force --syncdeps --rmdeps --noconfirm --ignorearch
        : mv ${name}-${pkgver}-${pkgrel}*.pkg.tar.xz "${REPO}"
        : repo-add --new "${REPO}/${NAME}.db.tar.gz" ${REPO}/${name}-${pkgver}-${pkgrel}-*.pkg.tar.xz
        pacman --sync --refresh
    fi

    : git clean -dxf
    cd ..
done

pacman --sync --list --color=always ${NAME}
